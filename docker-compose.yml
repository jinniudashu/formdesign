version: "3"

volumes: # 自定义数据卷
  clinic_static_vol:
  clinic_media_vol:
  clinic_backup_vol:
  dental_static_vol:
  dental_media_vol:
  dental_backup_vol:
  design_static_vol: #定义数据卷同步存放web项目static文件夹的数据
  design_media_vol: #定义数据卷同步存放web项目用户上传到media文件夹的数据
  design_backup_vol: #定义数据卷同步存放web项目备份文件夹的数据
  clinic-pgdata: # postgres数据文件目录
  dental-pgdata: # postgres数据文件目录

networks: # 自定义网络(默认桥接), 不使用links通信
  nginx_network:
    external: true
  clinic_network:
    driver: bridge
  dental_network:
    driver: bridge

services:
  clinic:
    image: jinniudashu/clinic_app:v1
    container_name: clinic
    command:
      - sh
      - -c
      - |
        python manage.py wait_for_db
        python manage.py migrate
        python manage.py loaddata initial_data.json
        python manage.py init_core_data
        daphne --port 8000 --bind 0.0.0.0 hssc.asgi:application
    env_file:
      - ./clinic/.env
    volumes:
      - clinic_static_vol:/app/static # 以数据卷挂载容器内static文件
      - clinic_media_vol:/app/uploads # 以数据卷挂载容器内用户上传媒体文件
      - clinic_backup_vol:/app/backup # 以数据卷挂载容器内备份文件
    networks:
      - clinic_network
      - nginx_network # <== Connect to the web network
    depends_on:
      - db

  db:
    image: postgres:14-alpine
    container_name: clinic_db
    env_file:
      - ./clinic/.env
    volumes: 
      - clinic-pgdata:/var/lib/postgresql/data
    networks:
      - clinic_network

  redis:
    image: redis:alpine
    container_name: clinic_redis
    networks:
      - clinic_network
    
  celery:
    restart: always
    image: jinniudashu/clinic_app:v1
    container_name: clinic_celery
    command: celery -A hssc worker -l info
    env_file:
      - ./clinic/.env
    networks:
      - clinic_network
    depends_on:
      - db
      - redis
      - clinic

  celerybeat:
    restart: always
    image: jinniudashu/clinic_app:v1
    container_name: clinic_celerybeat
    command: celery -A hssc beat -l INFO
    env_file:
      - ./clinic/.env
    networks:
      - clinic_network
    depends_on:
      - db
      - redis
      - clinic
      - celery

  dental:
    image: jinniudashu/dental_app:v1
    container_name: dental
    command:
      - sh
      - -c
      - |
        python manage.py wait_for_db
        python manage.py migrate
        python manage.py loaddata initial_data.json
        python manage.py init_core_data
        daphne --port 8000 --bind 0.0.0.0 hssc.asgi:application
    env_file:
      - ./dental/.env
    volumes:
      - dental_static_vol:/app/static # 以数据卷挂载容器内static文件
      - dental_media_vol:/app/uploads # 以数据卷挂载容器内用户上传媒体文件
      - dental_backup_vol:/app/backup # 以数据卷挂载容器内备份文件
    networks:
      - dental_network
      - nginx_network # <== Connect to the web network
    depends_on:
      - dental_db

  dental_db:
    image: postgres:14-alpine
    container_name: dental_db
    env_file:
      - ./dental/.env
    volumes: 
      -  dental-pgdata:/var/lib/postgresql/data
    networks:
      - dental_network

  dental_redis:
    image: redis:alpine
    container_name: dental_redis
    networks:
      - dental_network
    
  dental_celery:
    restart: always
    image: jinniudashu/dental_app:v1
    container_name: dental_celery
    command: celery -A hssc worker -l info
    env_file:
      - ./dental/.env
    networks:
      - dental_network
    depends_on:
      - dental_db
      - dental_redis
      - dental

  dental_celerybeat:
    restart: always
    image: jinniudashu/dental_app:v1
    container_name: dental_celerybeat
    command: celery -A hssc beat -l INFO
    env_file:
      - ./dental/.env
    networks:
      - dental_network
    depends_on:
      - dental_db
      - dental_redis
      - dental
      - dental_celery

  design:
    image: jinniudashu/design:v1
    container_name: design
    env_file:
      - ./design/.env
    environment:
      - DJANGO_DEBUG=0
    volumes:
      - design_static_vol:/app/static # 以数据卷挂载容器内static文件
      - design_media_vol:/app/media # 以数据卷挂载容器内用户上传媒体文件
      - design_backup_vol:/app/backup # 以数据卷挂载容器内备份文件
      - ./design/compose/uwsgi:/tmp # 挂载uwsgi日志
    networks:
      - nginx_network
    restart: always
    tty: true
    stdin_open: true

  nginx:
    # build: . # 指定Dockerfile文件所在目录
    image: jinniudashu/nginx-nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./design/ssl:/usr/share/nginx/ssl # 挂载ssl证书目录cd 
      - ./design/log:/var/log/nginx # 挂载日志
      - clinic_static_vol:/vol/clinic/static # 挂载静态文件
      - clinic_media_vol:/vol/clinic/media # 挂载用户上传媒体文件
      - dental_static_vol:/vol/dental/static # 挂载静态文件
      - dental_media_vol:/vol/dental/media # 挂载用户上传媒体文件
      - design_static_vol:/vol/design/static # 挂载静态文件
      - design_media_vol:/vol/design/media # 挂载用户上传媒体文件

    networks:
      - nginx_network
    restart: always