# Generated by Django 4.0 on 2022-03-09 05:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('define_form', '0001_initial'),
        ('define', '0001_initial'),
        ('define_icpc', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='name')),
                ('expression', models.TextField(blank=True, default='completed', help_text='\n        说明：<br>\n        1. 作业完成事件: completed<br>\n        2. 表达式接受的逻辑运算符：or, and, not, in, >=, <=, >, <, ==, +, -, *, /, ^, ()<br>\n        3. 字段名只允许由小写字母a~z，数字0~9和下划线_组成；字段值接受数字和字符，字符需要放在双引号中，如"A0101"\n        ', max_length=1024, null=True, verbose_name='规则')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='事件描述')),
                ('parameters', models.CharField(blank=True, max_length=1024, null=True, verbose_name='检查字段')),
                ('fields', models.TextField(blank=True, max_length=1024, null=True, verbose_name='可用字段')),
                ('event_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='作业事件ID')),
            ],
            options={
                'verbose_name': '事件',
                'verbose_name_plural': '事件',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Instruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='name')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='指令名称')),
                ('code', models.CharField(max_length=10, verbose_name='指令代码')),
                ('func', models.CharField(max_length=100, verbose_name='操作函数')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='指令描述')),
                ('instruction_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='指令ID')),
            ],
            options={
                'verbose_name': '指令',
                'verbose_name_plural': '指令',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='IntervalRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='规则名称')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='name')),
                ('rule', models.PositiveSmallIntegerField(blank=True, choices=[(0, '等于'), (1, '小于'), (2, '大于')], null=True, verbose_name='间隔规则')),
                ('interval', models.DurationField(blank=True, help_text='例如：3 days, 22:00:00', null=True, verbose_name='间隔时间')),
                ('description', models.TextField(blank=True, max_length=255, null=True, verbose_name='说明')),
                ('operand_interval_rule_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='间隔规则ID')),
            ],
            options={
                'verbose_name': '间隔规则',
                'verbose_name_plural': '间隔规则',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('execute_datetime', models.DateTimeField(blank=True, null=True, verbose_name='执行时间')),
                ('priority', models.PositiveSmallIntegerField(choices=[(0, '0级'), (1, '紧急'), (2, '优先'), (3, '一般')], default=3, verbose_name='优先级')),
                ('enable_queue_counter', models.BooleanField(default=True, verbose_name='显示队列数量')),
                ('suppliers', models.CharField(blank=True, max_length=255, null=True, verbose_name='供应商')),
                ('not_suitable', models.CharField(blank=True, max_length=255, null=True, verbose_name='不适用对象')),
                ('time_limits', models.DurationField(blank=True, null=True, verbose_name='完成时限')),
                ('working_hours', models.DurationField(blank=True, null=True, verbose_name='工时')),
                ('frequency', models.CharField(blank=True, max_length=255, null=True, verbose_name='频次')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='成本')),
                ('load_feedback', models.BooleanField(default=False, verbose_name='是否反馈负荷数量')),
                ('resource_materials', models.CharField(blank=True, max_length=255, null=True, verbose_name='配套物料')),
                ('resource_devices', models.CharField(blank=True, max_length=255, null=True, verbose_name='配套设备')),
                ('resource_knowledge', models.CharField(blank=True, max_length=255, null=True, verbose_name='服务知识')),
                ('operand_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='作业ID')),
                ('forms', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='define_form.buessinessform', verbose_name='作业表单')),
            ],
            options={
                'verbose_name': '作业',
                'verbose_name_plural': '作业',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('label', models.CharField(max_length=255, verbose_name='名称')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='角色描述')),
                ('role_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='角色ID')),
            ],
            options={
                'verbose_name': '角色',
                'verbose_name_plural': '角色',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('label', models.CharField(max_length=255, verbose_name='名称')),
                ('execute_datetime', models.DateTimeField(blank=True, null=True, verbose_name='执行时间')),
                ('priority', models.PositiveSmallIntegerField(choices=[(0, '0级'), (1, '紧急'), (2, '优先'), (3, '一般')], default=3, verbose_name='优先级')),
                ('history_services_display', models.PositiveBigIntegerField(choices=[(0, '所有历史服务'), (1, '当日服务')], default=0, verbose_name='历史服务显示')),
                ('enable_recommanded_list', models.BooleanField(default=True, verbose_name='显示推荐作业')),
                ('enable_queue_counter', models.BooleanField(default=True, verbose_name='显示队列计数')),
                ('suppliers', models.CharField(blank=True, max_length=255, null=True, verbose_name='供应商')),
                ('not_suitable', models.CharField(blank=True, max_length=255, null=True, verbose_name='不适用对象')),
                ('time_limits', models.DurationField(blank=True, null=True, verbose_name='完成时限')),
                ('working_hours', models.DurationField(blank=True, null=True, verbose_name='工时')),
                ('frequency', models.CharField(blank=True, max_length=255, null=True, verbose_name='频次')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='成本')),
                ('load_feedback', models.BooleanField(default=False, verbose_name='是否反馈负荷数量')),
                ('resource_materials', models.CharField(blank=True, max_length=255, null=True, verbose_name='配套物料')),
                ('resource_devices', models.CharField(blank=True, max_length=255, null=True, verbose_name='配套设备')),
                ('resource_knowledge', models.CharField(blank=True, max_length=255, null=True, verbose_name='服务知识')),
                ('service_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='单元服务ID')),
                ('first_operation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='first_operation', to='define_operand.operation', verbose_name='起始作业')),
                ('group', models.ManyToManyField(blank=True, to='define_operand.Role', verbose_name='服务角色')),
                ('last_operation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='last_operation', to='define_operand.operation', verbose_name='结束作业')),
                ('managed_entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='define.managedentity', verbose_name='管理实体')),
                ('name_icpc', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='define_icpc.icpc', verbose_name='ICPC编码')),
                ('operations', models.ManyToManyField(blank=True, to='define_operand.Operation', verbose_name='可选作业')),
            ],
            options={
                'verbose_name': '单元服务',
                'verbose_name_plural': '单元服务',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ServiceEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='name')),
                ('expression', models.TextField(blank=True, default='completed', help_text='\n        说明：<br>\n        1. 作业完成事件: completed<br>\n        2. 表达式接受的逻辑运算符：or, and, not, in, >=, <=, >, <, ==, +, -, *, /, ^, ()<br>\n        3. 字段名只允许由小写字母a~z，数字0~9和下划线_组成；字段值接受数字和字符，字符需要放在双引号中，如"A0101"\n        ', max_length=1024, null=True, verbose_name='表达式')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='事件描述')),
                ('parameters', models.CharField(blank=True, max_length=1024, null=True, verbose_name='检查字段')),
                ('fields', models.TextField(blank=True, max_length=1024, null=True, verbose_name='可用字段')),
                ('service_event_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='服务事件ID')),
            ],
            options={
                'verbose_name': '单元服务事件',
                'verbose_name_plural': '单元服务事件',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ServicePackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('label', models.CharField(max_length=255, verbose_name='名称')),
                ('execute_datetime', models.DateTimeField(blank=True, null=True, verbose_name='执行时间')),
                ('service_package_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='服务包ID')),
                ('first_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='first_service', to='define_operand.service', verbose_name='起始服务')),
                ('last_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='last_service', to='define_operand.service', verbose_name='结束服务')),
                ('name_icpc', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='define_icpc.icpc', verbose_name='ICPC编码')),
                ('services', models.ManyToManyField(blank=True, to='define_operand.Service', verbose_name='可选服务')),
            ],
            options={
                'verbose_name': '服务包',
                'verbose_name_plural': '服务包',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ServicePackageEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='name')),
                ('expression', models.TextField(blank=True, default='completed', help_text='\n        说明：<br>\n        1. 作业完成事件: completed<br>\n        2. 表达式接受的逻辑运算符：or, and, not, in, >=, <=, >, <, ==, +, -, *, /, ^, ()<br>\n        3. 字段名只允许由小写字母a~z，数字0~9和下划线_组成；字段值接受数字和字符，字符需要放在双引号中，如"A0101"\n        ', max_length=1024, null=True, verbose_name='表达式')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='事件描述')),
                ('servicepackage_event_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='服务包事件ID')),
            ],
            options={
                'verbose_name': '服务包事件',
                'verbose_name_plural': '服务包事件',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ServicePackageEventRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_specified', models.BooleanField(default=False, verbose_name='规定服务')),
                ('servicepackage_event_route_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='服务包事件路由ID')),
                ('interval_rule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='define_operand.intervalrule', verbose_name='间隔规则')),
                ('servicepackage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='define_operand.servicepackage', verbose_name='后续服务')),
                ('servicepackage_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='define_operand.servicepackageevent', verbose_name='服务包事件')),
            ],
            options={
                'verbose_name': '服务包事件路由',
                'verbose_name_plural': '服务包事件路由',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='servicepackageevent',
            name='next_servicepackages',
            field=models.ManyToManyField(through='define_operand.ServicePackageEventRoute', to='define_operand.ServicePackage', verbose_name='后续服务'),
        ),
        migrations.AddField(
            model_name='servicepackageevent',
            name='servicepackage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_sid', to='define_operand.servicepackage', verbose_name='所属服务包'),
        ),
        migrations.CreateModel(
            name='ServiceOperations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='define_operand.operation', verbose_name='作业')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='define_operand.service', verbose_name='单元服务')),
            ],
            options={
                'verbose_name': '作业关系设置',
                'verbose_name_plural': '作业关系设置',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ServiceEventRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passing_data', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '复制，不可编辑'), (2, '复制，可以编辑')], default=0, verbose_name='复制表单数据')),
                ('is_specified', models.BooleanField(default=False, verbose_name='规定服务')),
                ('service_event_route_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='服务事件路由ID')),
                ('interval_rule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='define_operand.intervalrule', verbose_name='间隔规则')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='define_operand.service', verbose_name='后续服务')),
                ('service_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='define_operand.serviceevent', verbose_name='服务事件')),
            ],
            options={
                'verbose_name': '服务事件路由',
                'verbose_name_plural': '服务事件路由',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='serviceevent',
            name='next_services',
            field=models.ManyToManyField(through='define_operand.ServiceEventRoute', to='define_operand.Service', verbose_name='后续服务'),
        ),
        migrations.AddField(
            model_name='serviceevent',
            name='service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_service_id', to='define_operand.service', verbose_name='所属服务'),
        ),
        migrations.AddField(
            model_name='operation',
            name='group',
            field=models.ManyToManyField(blank=True, to='define_operand.Role', verbose_name='作业角色'),
        ),
        migrations.AddField(
            model_name='operation',
            name='name_icpc',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='define_icpc.icpc', verbose_name='ICPC编码'),
        ),
        migrations.CreateModel(
            name='EventRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passing_data', models.PositiveSmallIntegerField(choices=[(0, '否'), (1, '复制，不可编辑'), (2, '复制，可以编辑')], default=0, verbose_name='复制表单数据')),
                ('is_specified', models.BooleanField(default=False, verbose_name='规定作业')),
                ('event_route_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='事件路由ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='define_operand.event', verbose_name='事件')),
                ('interval_rule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='define_operand.intervalrule', verbose_name='间隔规则')),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='define_operand.operation', verbose_name='后续作业')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='define_operand.service', verbose_name='单元服务')),
            ],
            options={
                'verbose_name': '作业事件路由',
                'verbose_name_plural': '作业事件路由',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Event_instructions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(default=1, verbose_name='指令序号')),
                ('params', models.CharField(blank=True, max_length=255, null=True, verbose_name='创建作业')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='define_operand.event', verbose_name='事件')),
                ('instruction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='define_operand.instruction', verbose_name='指令')),
            ],
            options={
                'verbose_name': '作业事件指令集',
                'verbose_name_plural': '作业事件指令集',
                'ordering': ['event', 'order'],
            },
        ),
        migrations.AddField(
            model_name='event',
            name='next_operations',
            field=models.ManyToManyField(through='define_operand.EventRoute', to='define_operand.Operation', verbose_name='后续作业'),
        ),
        migrations.AddField(
            model_name='event',
            name='operation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_oid', to='define_operand.operation', verbose_name='所属作业'),
        ),
    ]
